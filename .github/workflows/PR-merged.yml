
name: Main Branch pipeline
on:
  push:
    branches:
      - main

  workflow_dispatch:

    


jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Install Task
      uses: arduino/setup-task@v1

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }} 
    
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: ${{ secrets.ECR_REPO }}
        IMAGE_TAG: ${{ github.sha }}
      run: |
        #Set image tag names
        DOCKER_IMAGE_NAME="$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
        NEW_DOCKER_IMAGE_NAME="$ECR_REGISTRY/$ECR_REPOSITORY:main"

        #Build image
        DOCKER_IMAGE_NAME=$DOCKER_IMAGE_NAME task docker:build

        #Add main tag to docker image
        DOCKER_IMAGE_NAME=$DOCKER_IMAGE_NAME NEW_DOCKER_IMAGE_NAME=$NEW_DOCKER_IMAGE_NAME task docker:tag

        #Push docker images
        PUSH_DOCKER_IMAGE_NAME=$DOCKER_IMAGE_NAME task docker:push
        PUSH_DOCKER_IMAGE_NAME=$NEW_DOCKER_IMAGE_NAME task docker:push
        echo "::set-output name=image::$DOCKER_IMAGE_NAME"
    
    


  deploy:
    name: Deploy
    needs: build
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v2
   
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }} 
    
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
    
    - name: Get Amazon ECR URI
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: ${{ secrets.ECR_REPO }}
        IMAGE_TAG: ${{ github.sha }}
      run: |
        #Set image tag names
        DOCKER_IMAGE_NAME="$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
        echo "::set-output name=image::$DOCKER_IMAGE_NAME"

    ##### Deploy    
    - name: Fill in the new image ID in the Amazon ECS task definition
      id: task-def
      uses: aws-actions/amazon-ecs-render-task-definition@v1
      with:
        task-definition: task-definition.json
        container-name: ${{ secrets.ECS_CONTAINER }}
        image: ${{ steps.build-image.outputs.image }}    

    - name: Deploy Amazon ECS task definition
      uses: aws-actions/amazon-ecs-deploy-task-definition@v1
      with:
        task-definition: ${{ steps.task-def.outputs.task-definition }}
        service: ${{ secrets.ECS_SERVICE }}
        cluster: ${{ secrets.ECS_CLUSTER }}
        wait-for-service-stability: true
    - name: Ready
      id: deployment-successful
      run: |
        echo "Changes visible at https://cloudacademydemo.com/"