name: Release pipeline

on:
  release:
    types: [published]
  workflow_dispatch:


jobs:
  build:
    name: Build
    if: github.event.release.target_commitish != 'main'
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Install Task
      uses: arduino/setup-task@v1

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}
    
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: ${{ secrets.ECR_REPO }}
        IMAGE_TAG: ${{ github.ref_name}}
      run: |
        echo "Version=$IMAGE_TAG  Branch=${{ github.event.release.target_commitish }}"
        DOCKER_IMAGE_NAME="$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
        
        #Build image
        DOCKER_IMAGE_NAME=$DOCKER_IMAGE_NAME task docker:build

        #Push docker images
        PUSH_DOCKER_IMAGE_NAME=$DOCKER_IMAGE_NAME task docker:push

        echo "::set-output name=image::$DOCKER_IMAGE_NAME"